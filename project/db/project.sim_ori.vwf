/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("debug_AR1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debug_AR1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR1";
}

SIGNAL("debug_AR1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR1";
}

SIGNAL("debug_AR1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR1";
}

SIGNAL("debug_AR1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR1";
}

SIGNAL("debug_AR1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR1";
}

SIGNAL("debug_AR1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR1";
}

SIGNAL("debug_AR1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR1";
}

SIGNAL("debug_AR1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR1";
}

SIGNAL("debug_AR2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debug_AR2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR2";
}

SIGNAL("debug_AR2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR2";
}

SIGNAL("debug_AR2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR2";
}

SIGNAL("debug_AR2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR2";
}

SIGNAL("debug_AR2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR2";
}

SIGNAL("debug_AR2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR2";
}

SIGNAL("debug_AR2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR2";
}

SIGNAL("debug_AR2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_AR2";
}

SIGNAL("debug_beats")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debug_beats[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_beats";
}

SIGNAL("debug_beats[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_beats";
}

SIGNAL("debug_beats[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_beats";
}

SIGNAL("debug_beats[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_beats";
}

SIGNAL("debug_command")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debug_command[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_command";
}

SIGNAL("debug_command[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_command";
}

SIGNAL("debug_command[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_command";
}

SIGNAL("debug_command[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_command";
}

SIGNAL("debug_command[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_command";
}

SIGNAL("debug_command[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_command";
}

SIGNAL("debug_CPUdata")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debug_CPUdata[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_CPUdata";
}

SIGNAL("debug_CPUdata[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_CPUdata";
}

SIGNAL("debug_CPUdata[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_CPUdata";
}

SIGNAL("debug_CPUdata[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_CPUdata";
}

SIGNAL("debug_CPUdata[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_CPUdata";
}

SIGNAL("debug_CPUdata[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_CPUdata";
}

SIGNAL("debug_CPUdata[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_CPUdata";
}

SIGNAL("debug_CPUdata[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_CPUdata";
}

SIGNAL("debug_CPUdata[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_CPUdata";
}

SIGNAL("debug_CPUdata[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_CPUdata";
}

SIGNAL("debug_CPUdata[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_CPUdata";
}

SIGNAL("debug_CPUdata[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_CPUdata";
}

SIGNAL("debug_CPUdata[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_CPUdata";
}

SIGNAL("debug_CPUdata[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_CPUdata";
}

SIGNAL("debug_CPUdata[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_CPUdata";
}

SIGNAL("debug_IP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debug_IP[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IP";
}

SIGNAL("debug_IP[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IP";
}

SIGNAL("debug_IP[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IP";
}

SIGNAL("debug_IP[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IP";
}

SIGNAL("debug_IP[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IP";
}

SIGNAL("debug_IP[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IP";
}

SIGNAL("debug_IP[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IP";
}

SIGNAL("debug_IP[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IP";
}

SIGNAL("debug_IR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debug_IR[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IR";
}

SIGNAL("debug_IR[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IR";
}

SIGNAL("debug_IR[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IR";
}

SIGNAL("debug_IR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IR";
}

SIGNAL("debug_IR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IR";
}

SIGNAL("debug_IR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IR";
}

SIGNAL("debug_IR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IR";
}

SIGNAL("debug_IR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IR";
}

SIGNAL("debug_IR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IR";
}

SIGNAL("debug_IR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IR";
}

SIGNAL("debug_IR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IR";
}

SIGNAL("debug_IR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IR";
}

SIGNAL("debug_IR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IR";
}

SIGNAL("debug_IR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IR";
}

SIGNAL("debug_IR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_IR";
}

SIGNAL("work")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debug_ramData")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debug_ramData[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_ramData";
}

SIGNAL("debug_ramData[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_ramData";
}

SIGNAL("debug_ramData[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_ramData";
}

SIGNAL("debug_ramData[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_ramData";
}

SIGNAL("debug_ramData[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_ramData";
}

SIGNAL("debug_ramData[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_ramData";
}

SIGNAL("debug_ramData[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_ramData";
}

SIGNAL("debug_ramData[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_ramData";
}

SIGNAL("debug_ramData[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_ramData";
}

SIGNAL("debug_ramData[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_ramData";
}

SIGNAL("debug_ramData[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_ramData";
}

SIGNAL("debug_ramData[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_ramData";
}

SIGNAL("debug_ramData[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_ramData";
}

SIGNAL("debug_ramData[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_ramData";
}

SIGNAL("debug_ramData[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_ramData";
}

SIGNAL("ramAddr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ramAddr[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ramAddr";
}

SIGNAL("ramAddr[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ramAddr";
}

SIGNAL("ramAddr[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ramAddr";
}

SIGNAL("ramAddr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ramAddr";
}

SIGNAL("ramAddr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ramAddr";
}

SIGNAL("ramAddr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ramAddr";
}

SIGNAL("ramAddr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ramAddr";
}

SIGNAL("ramAddr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ramAddr";
}

SIGNAL("debug_outAR1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debug_outAR1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_outAR1";
}

SIGNAL("debug_outAR1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_outAR1";
}

SIGNAL("debug_outAR1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_outAR1";
}

SIGNAL("debug_outAR1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_outAR1";
}

SIGNAL("debug_outAR1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_outAR1";
}

SIGNAL("debug_outAR1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_outAR1";
}

SIGNAL("debug_outAR1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_outAR1";
}

SIGNAL("debug_outAR1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_outAR1";
}

SIGNAL("debug_DR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debug_DR[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_DR";
}

SIGNAL("debug_DR[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_DR";
}

SIGNAL("debug_DR[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_DR";
}

SIGNAL("debug_DR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_DR";
}

SIGNAL("debug_DR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_DR";
}

SIGNAL("debug_DR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_DR";
}

SIGNAL("debug_DR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_DR";
}

SIGNAL("debug_DR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_DR";
}

SIGNAL("debug_DR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_DR";
}

SIGNAL("debug_DR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_DR";
}

SIGNAL("debug_DR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_DR";
}

SIGNAL("debug_DR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_DR";
}

SIGNAL("debug_DR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_DR";
}

SIGNAL("debug_DR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_DR";
}

SIGNAL("debug_DR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_DR";
}

SIGNAL("stackEmpty")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("stackFull")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("enCommand")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Ax")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Ax[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Ax";
}

SIGNAL("Ax[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Ax";
}

SIGNAL("Ax[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Ax";
}

SIGNAL("Ax[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Ax";
}

SIGNAL("Ax[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Ax";
}

SIGNAL("Ax[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Ax";
}

SIGNAL("Ax[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Ax";
}

SIGNAL("Ax[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Ax";
}

SIGNAL("Ax[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Ax";
}

SIGNAL("Ax[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Ax";
}

SIGNAL("Ax[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Ax";
}

SIGNAL("Ax[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Ax";
}

SIGNAL("Ax[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Ax";
}

SIGNAL("Ax[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Ax";
}

SIGNAL("Ax[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Ax";
}

SIGNAL("Bx")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Bx[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bx";
}

SIGNAL("Bx[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bx";
}

SIGNAL("Bx[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bx";
}

SIGNAL("Bx[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bx";
}

SIGNAL("Bx[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bx";
}

SIGNAL("Bx[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bx";
}

SIGNAL("Bx[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bx";
}

SIGNAL("Bx[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bx";
}

SIGNAL("Bx[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bx";
}

SIGNAL("Bx[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bx";
}

SIGNAL("Bx[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bx";
}

SIGNAL("Bx[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bx";
}

SIGNAL("Bx[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bx";
}

SIGNAL("Bx[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bx";
}

SIGNAL("Bx[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Bx";
}

SIGNAL("outALU")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outALU[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outALU";
}

SIGNAL("outALU[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outALU";
}

SIGNAL("outALU[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outALU";
}

SIGNAL("outALU[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outALU";
}

SIGNAL("outALU[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outALU";
}

SIGNAL("outALU[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outALU";
}

SIGNAL("outALU[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outALU";
}

SIGNAL("outALU[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outALU";
}

SIGNAL("outALU[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outALU";
}

SIGNAL("outALU[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outALU";
}

SIGNAL("outALU[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outALU";
}

SIGNAL("outALU[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outALU";
}

SIGNAL("outALU[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outALU";
}

SIGNAL("outALU[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outALU";
}

SIGNAL("outALU[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "outALU";
}

SIGNAL("debug_control")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 15;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debug_control[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_control";
}

SIGNAL("debug_control[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_control";
}

SIGNAL("debug_control[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_control";
}

SIGNAL("debug_control[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_control";
}

SIGNAL("debug_control[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_control";
}

SIGNAL("debug_control[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_control";
}

SIGNAL("debug_control[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_control";
}

SIGNAL("debug_control[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_control";
}

SIGNAL("debug_control[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_control";
}

SIGNAL("debug_control[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_control";
}

SIGNAL("debug_control[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_control";
}

SIGNAL("debug_control[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_control";
}

SIGNAL("debug_control[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_control";
}

SIGNAL("debug_control[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_control";
}

SIGNAL("debug_control[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debug_control";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("debug_AR1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_AR1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_AR1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_AR1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_AR1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_AR1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_AR1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 165.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 470.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 215.0;
	}
}

TRANSITION_LIST("debug_AR1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 165.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 85.0;
	}
}

TRANSITION_LIST("debug_AR2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_AR2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_AR2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_AR2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_AR2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 835.0;
	}
}

TRANSITION_LIST("debug_AR2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 395.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 430.0;
		LEVEL 1 FOR 85.0;
	}
}

TRANSITION_LIST("debug_AR2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_AR2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 165.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 430.0;
		LEVEL 1 FOR 85.0;
	}
}

TRANSITION_LIST("debug_beats[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 210.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("debug_beats[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 50.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("debug_beats[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("debug_beats[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 10.0;
			}
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("debug_command[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_command[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_command[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_command[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_command[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_command[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_CPUdata[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 235.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 250.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_CPUdata[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 235.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 250.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_CPUdata[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 235.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 250.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_CPUdata[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 235.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 250.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_CPUdata[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 235.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 250.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_CPUdata[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 235.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 250.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_CPUdata[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 235.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 250.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_CPUdata[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 235.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 250.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_CPUdata[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 235.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 250.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_CPUdata[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 235.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 250.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_CPUdata[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 235.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 250.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_CPUdata[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 235.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 250.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_CPUdata[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 235.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 250.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_CPUdata[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 235.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 250.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_CPUdata[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 235.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 250.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 60.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 50.0;
		LEVEL U FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_IP[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_IP[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_IP[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_IP[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_IP[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 745.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("debug_IP[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 345.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 135.0;
	}
}

TRANSITION_LIST("debug_IP[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 175.0;
		LEVEL 1 FOR 170.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 135.0;
	}
}

TRANSITION_LIST("debug_IP[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 75.0;
	}
}

TRANSITION_LIST("debug_IR[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 485.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 425.0;
	}
}

TRANSITION_LIST("debug_IR[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 335.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 85.0;
	}
}

TRANSITION_LIST("debug_IR[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 165.0;
		LEVEL 1 FOR 170.0;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 145.0;
	}
}

TRANSITION_LIST("debug_IR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 265.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 85.0;
	}
}

TRANSITION_LIST("debug_IR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_IR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_IR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_IR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_IR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 165.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 470.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 215.0;
	}
}

TRANSITION_LIST("debug_IR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 165.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 85.0;
	}
}

TRANSITION_LIST("debug_IR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_IR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 835.0;
	}
}

TRANSITION_LIST("debug_IR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 395.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 430.0;
		LEVEL 1 FOR 85.0;
	}
}

TRANSITION_LIST("debug_IR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_IR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 165.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 430.0;
		LEVEL 1 FOR 85.0;
	}
}

TRANSITION_LIST("work")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("debug_ramData[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_ramData[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_ramData[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_ramData[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_ramData[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_ramData[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_ramData[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_ramData[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_ramData[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_ramData[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_ramData[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_ramData[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_ramData[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_ramData[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_ramData[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL X FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL X FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("ramAddr[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("ramAddr[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("ramAddr[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("ramAddr[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("ramAddr[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("ramAddr[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("ramAddr[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("ramAddr[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_outAR1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_outAR1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_outAR1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_outAR1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_outAR1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_outAR1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_outAR1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_outAR1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 195.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 170.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 380.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_DR[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL X FOR 465.0;
	}
}

TRANSITION_LIST("debug_DR[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL X FOR 465.0;
	}
}

TRANSITION_LIST("debug_DR[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL X FOR 465.0;
	}
}

TRANSITION_LIST("debug_DR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL X FOR 465.0;
	}
}

TRANSITION_LIST("debug_DR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL X FOR 465.0;
	}
}

TRANSITION_LIST("debug_DR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL X FOR 465.0;
	}
}

TRANSITION_LIST("debug_DR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL X FOR 465.0;
	}
}

TRANSITION_LIST("debug_DR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL X FOR 465.0;
	}
}

TRANSITION_LIST("debug_DR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL X FOR 465.0;
	}
}

TRANSITION_LIST("debug_DR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL X FOR 465.0;
	}
}

TRANSITION_LIST("debug_DR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL X FOR 465.0;
	}
}

TRANSITION_LIST("debug_DR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL X FOR 465.0;
	}
}

TRANSITION_LIST("debug_DR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 310.0;
		LEVEL X FOR 465.0;
	}
}

TRANSITION_LIST("debug_DR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL X FOR 465.0;
	}
}

TRANSITION_LIST("debug_DR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 535.0;
		LEVEL X FOR 465.0;
	}
}

TRANSITION_LIST("stackEmpty")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL U FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL U FOR 30.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			LEVEL U FOR 30.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL U FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL U FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL U FOR 30.0;
		LEVEL 0 FOR 100.0;
		LEVEL U FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL U FOR 5.0;
	}
}

TRANSITION_LIST("stackFull")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("enCommand")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 755.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 225.0;
	}
}

TRANSITION_LIST("Ax[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 525.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 465.0;
	}
}

TRANSITION_LIST("Ax[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 525.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 465.0;
	}
}

TRANSITION_LIST("Ax[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 525.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 465.0;
	}
}

TRANSITION_LIST("Ax[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 525.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 465.0;
	}
}

TRANSITION_LIST("Ax[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 525.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 465.0;
	}
}

TRANSITION_LIST("Ax[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 525.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 465.0;
	}
}

TRANSITION_LIST("Ax[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 525.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 465.0;
	}
}

TRANSITION_LIST("Ax[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 525.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 465.0;
	}
}

TRANSITION_LIST("Ax[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 525.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 465.0;
	}
}

TRANSITION_LIST("Ax[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 525.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 465.0;
	}
}

TRANSITION_LIST("Ax[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 525.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 465.0;
	}
}

TRANSITION_LIST("Ax[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 525.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 465.0;
	}
}

TRANSITION_LIST("Ax[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 525.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 465.0;
	}
}

TRANSITION_LIST("Ax[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 525.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 465.0;
	}
}

TRANSITION_LIST("Ax[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 525.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 465.0;
	}
}

TRANSITION_LIST("Bx[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Bx[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Bx[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Bx[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Bx[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Bx[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Bx[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Bx[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Bx[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Bx[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Bx[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Bx[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Bx[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Bx[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Bx[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("outALU[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 485.0;
		LEVEL X FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("outALU[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 485.0;
		LEVEL X FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("outALU[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 485.0;
		LEVEL X FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("outALU[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 485.0;
		LEVEL X FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("outALU[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 485.0;
		LEVEL X FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("outALU[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 485.0;
		LEVEL X FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("outALU[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 485.0;
		LEVEL X FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("outALU[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 485.0;
		LEVEL X FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("outALU[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 485.0;
		LEVEL X FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("outALU[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 485.0;
		LEVEL X FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("outALU[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 485.0;
		LEVEL X FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("outALU[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 485.0;
		LEVEL X FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("outALU[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 485.0;
		LEVEL X FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("outALU[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 485.0;
		LEVEL X FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("outALU[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 485.0;
		LEVEL X FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 40.0;
		LEVEL Z FOR 425.0;
	}
}

TRANSITION_LIST("debug_control[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_control[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_control[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_control[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_control[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_control[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_control[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_control[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_control[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_control[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_control[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_control[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_control[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 30.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_control[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 60.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("debug_control[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 30.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 130.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "debug_AR2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "debug_beats";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "debug_beats[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "debug_beats[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "debug_beats[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "debug_beats[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "debug_command";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "debug_command[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "debug_command[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "debug_command[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "debug_command[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "debug_command[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "debug_command[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "debug_control[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
	CHILDREN = 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debug_CPUdata[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
	CHILDREN = 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "debug_DR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 63;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 0;
	CHILDREN = 80, 81, 82, 83, 84, 85, 86, 87;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IP[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IP[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IP[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IP[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IP[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IP[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IP[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IP[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 79;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 0;
	CHILDREN = 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "debug_IR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 88;
}

DISPLAY_LINE
{
	CHANNEL = "work";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 0;
	CHILDREN = 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "debug_ramData[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 105;
}

DISPLAY_LINE
{
	CHANNEL = "ramAddr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 0;
	CHILDREN = 122, 123, 124, 125, 126, 127, 128, 129;
}

DISPLAY_LINE
{
	CHANNEL = "ramAddr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ramAddr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ramAddr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ramAddr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ramAddr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ramAddr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ramAddr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "ramAddr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 121;
}

DISPLAY_LINE
{
	CHANNEL = "debug_outAR1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 130;
	TREE_LEVEL = 0;
	CHILDREN = 131, 132, 133, 134, 135, 136, 137, 138;
}

DISPLAY_LINE
{
	CHANNEL = "debug_outAR1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "debug_outAR1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "debug_outAR1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "debug_outAR1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "debug_outAR1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "debug_outAR1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "debug_outAR1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 137;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "debug_outAR1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 130;
}

DISPLAY_LINE
{
	CHANNEL = "stackEmpty";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 139;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "stackFull";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 140;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "enCommand";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 141;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Ax";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 142;
	TREE_LEVEL = 0;
	CHILDREN = 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157;
}

DISPLAY_LINE
{
	CHANNEL = "Ax[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "Ax[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "Ax[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "Ax[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "Ax[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "Ax[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "Ax[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "Ax[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "Ax[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "Ax[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "Ax[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "Ax[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "Ax[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 155;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "Ax[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "Ax[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 157;
	TREE_LEVEL = 1;
	PARENT = 142;
}

DISPLAY_LINE
{
	CHANNEL = "Bx";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 158;
	TREE_LEVEL = 0;
	CHILDREN = 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173;
}

DISPLAY_LINE
{
	CHANNEL = "Bx[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 159;
	TREE_LEVEL = 1;
	PARENT = 158;
}

DISPLAY_LINE
{
	CHANNEL = "Bx[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 160;
	TREE_LEVEL = 1;
	PARENT = 158;
}

DISPLAY_LINE
{
	CHANNEL = "Bx[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 161;
	TREE_LEVEL = 1;
	PARENT = 158;
}

DISPLAY_LINE
{
	CHANNEL = "Bx[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 162;
	TREE_LEVEL = 1;
	PARENT = 158;
}

DISPLAY_LINE
{
	CHANNEL = "Bx[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 163;
	TREE_LEVEL = 1;
	PARENT = 158;
}

DISPLAY_LINE
{
	CHANNEL = "Bx[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 164;
	TREE_LEVEL = 1;
	PARENT = 158;
}

DISPLAY_LINE
{
	CHANNEL = "Bx[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 165;
	TREE_LEVEL = 1;
	PARENT = 158;
}

DISPLAY_LINE
{
	CHANNEL = "Bx[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 166;
	TREE_LEVEL = 1;
	PARENT = 158;
}

DISPLAY_LINE
{
	CHANNEL = "Bx[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 167;
	TREE_LEVEL = 1;
	PARENT = 158;
}

DISPLAY_LINE
{
	CHANNEL = "Bx[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 168;
	TREE_LEVEL = 1;
	PARENT = 158;
}

DISPLAY_LINE
{
	CHANNEL = "Bx[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 169;
	TREE_LEVEL = 1;
	PARENT = 158;
}

DISPLAY_LINE
{
	CHANNEL = "Bx[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 170;
	TREE_LEVEL = 1;
	PARENT = 158;
}

DISPLAY_LINE
{
	CHANNEL = "Bx[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 171;
	TREE_LEVEL = 1;
	PARENT = 158;
}

DISPLAY_LINE
{
	CHANNEL = "Bx[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 172;
	TREE_LEVEL = 1;
	PARENT = 158;
}

DISPLAY_LINE
{
	CHANNEL = "Bx[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 173;
	TREE_LEVEL = 1;
	PARENT = 158;
}

DISPLAY_LINE
{
	CHANNEL = "outALU";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 174;
	TREE_LEVEL = 0;
	CHILDREN = 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189;
}

DISPLAY_LINE
{
	CHANNEL = "outALU[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 175;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "outALU[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 176;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "outALU[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 177;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "outALU[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 178;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "outALU[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 179;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "outALU[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 180;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "outALU[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 181;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "outALU[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 182;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "outALU[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 183;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "outALU[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 184;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "outALU[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 185;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "outALU[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 186;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "outALU[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 187;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "outALU[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 188;
	TREE_LEVEL = 1;
	PARENT = 174;
}

DISPLAY_LINE
{
	CHANNEL = "outALU[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 189;
	TREE_LEVEL = 1;
	PARENT = 174;
}

TIME_BAR
{
	TIME = 500000;
	MASTER = TRUE;
}
;
